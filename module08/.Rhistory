library(ALL)
data(ALL)
Bcells <- <- ALL[,ALL$BT%in%c("B","B1","B2","B3","B4")]
Bcells <- ALL[,ALL$BT%in%c("B","B1","B2","B3","B4")]
y <- exprs(Bcells)
anova(lm(y ~ Bcells$BT))
anova(lm(y~Bcells$BT))
anova(lm(y~Bcells))
anova(lm(y~Bcells$BT))
anova(lm(y ~ Bcells$BT))
Sys.getenv(LANGUAGE = "en")
Sys.getenv(LANGUAGE = "fr")
Sys.getenv()
Sys.setenv(lang = "en_US")
anova(lm(y ~ Bcells$BT))
ALLB123 <- ALL[,ALL$BT%in%c("B1","B2","B3)]
q
""
''
exit
quit
ALLB123 <- ALL[,ALL$BT%in%c("B1","B2","B3")]
y <- exprs(ALLB123)["1866_g_at",]
anova(lm(y ~ ALLB123$BT))
Bcells <- ALL[,ALL$BT%in%c("B","B1","B2","B3","B4")]
y <- exprs(Bcells)["109_at"]
anova(lm(y ~ Bcells$BT))
Bcells <- ALL[,ALL$BT%in%c(,"B1","B2","B3")]
Bcells <- ALL[,ALL$BT%in%c("B1","B2","B3")]
y <- exprs(Bcells)["109_at"]
# part a
anova(lm(y ~ Bcells$BT))
Bcells <- ALL[,ALL$BT%in%c("B","B1","B2","B3","B4")]
y <- exprs(Bcells)["109_at"]
# part a
anova(lm(y ~ Bcells$BT))
View(ALL)
View(ALLB123)
View(ALL)
y <- exprs(Bcells)["109_at"]
y <- exprs(ALLB123)["1866_g_at",]
ALLB123 <- ALL[,ALL$BT%in%c("B1","B2","B3")]
y <- exprs(Bcells)["109_at"]
ALLB123 <- ALL[,ALL$BT%in%c("B1","B2","B3")]
y <- exprs(ALLB123)["109_at"]
ALLB123 <- ALL[,ALL$BT%in%c("B1","B2","B3")]
y <- exprs(ALLB123)["1866_g_at"]
y <- exprs(ALLB123)["1866_g_at",]
y <- exprs(ALLB123)["109_at",]
Bcells <- ALL[,ALL$BT%in%c("B","B1","B2","B3","B4")]
y <- exprs(Bcells)["109_at",]
anova(lm(y ~ Bcells$BT))
summary(lm(y ~ Bcells$BT))
summary(lm(y ~ Bcells$BT -1))
summary(lm(y ~ Bcells$BT - 1))
pairwise.t.test(y,Bcells$BT,p.adjust.method = 'fdr')
anova(lm(y ~ Bcells$BT))
shapiro.test(residuals(lm(y ~ Bcells$BT)))
install.packages(dplry)
install.packages(dplyr)
install.packages("dplyr")
pairwise.t.test(y,Bcells$BT,p.adjust.method = 'fdr')
names(sort(Bcells$BT,p.adjust.methods = 'fdr'))
names(sort(Bcells$BT,p.adjust.method = 'fdr'))
Bcells
Bcells$BT
Bcells
names(sort(Bcells, p.adjust.method = 'fdr'))
head(Bcells)
head(Bcells$BT)
kruskal.test(y ~ Bcells$BT)
kruskal.test(y ~ Bcells$BT,p.adjust.methods = 'fdr')
kruskal.test(y ~ Bcells$BT,p.adjust.method = 'fdr')
apply(Bcells$BT, 1, kruskal.test(x))
apply(Bcells$BT, 1, kruskal.test(y ~ Bcells$BT))
apply(Bcells$BT, 1, kruskal.test(y))
kruskal.test(y)
kruskal.test(y,Bcells$BT)
apply(Bcells$BT, 1, kruskal.test(y,Bcells$BT))
lapply(Bcells$BT, 1, kruskal.test(y,Bcells$BT))
sapply(Bcells$BT, 1, kruskal.test(y,Bcells$BT))
lapply(Bcells$BT, kruskal.test(y,Bcells$BT))
exprs(Bcells)
y1 <- exprs(Bcells)
kruskal.test(y1 ~ Bcells$BT)
apply(y1, 1, kruskal.test(x ~ Bcells$BT))
apply(y1, 1, kruskal.test(y1 ~ Bcells$BT))
apply(y1, 1, p.adjust.methods = 'fdr')
name(exprs(Bcells))
names(exprs(Bcells))
lapply(y1,kruskal.test())
lapply(y1,kruskal.test(y1))
lapply(y1,kruskal.test(y1,Bcells))
lapply(y1,kruskal.test(y1,Bcells$BT))
y1 <- exprs(Bcells)
y1
Bcells
Bcells$BT
y1 <- exprs(Bcells)[]
y1
y1 <- exprs(Bcells)[,]
y1
kruskal.test(y ~ Bcells$BT, data = ALL)
y
y1
y1['1000_at']
y1["1009_at"]
y1[1]
y1
y1[1]
y1[0]
y
apply(y1, 1, kruskal.test(y1[] ~ Bcells$BT, data = ALL))
apply(y1, 1, kruskal.test(y1[i] ~ Bcells$BT, data = ALL))
for (i in y1) {
print(y1[i])
}
apply(y1,kruskal.test(y,Bcells$BT))
apply(y1,kruskal.test(y ` Bcells$BT))
apply(y1,kruskal.test(y ~ Bcells$BT))
y1
names(y1)
y1[names()]
y1 <- exprs(Bcells)
y1
View(y1)
y1
apply(y1, 1, function(x) { kruskal.test(x ~ Bcells$BT)})
apply(y1, 1, function(x) {kruskal.test(x ~ Bcells$BT)})
ktest <- apply(y1, 1, function(x) {kruskal.test(x ~ Bcells$BT)})
ktest
ktest$1000_at$p.value
ktest$1000_at
ktest$1000_at
ktest$p.value
ktest$'1000_at'
ktest$'1000_at'$p.value
ktest <- apply(y1, 1, function(x) {kruskal.test(x ~ Bcells$BT, p.adjust.methods = 'fdr')})
ktest <- apply(y1, 1, function(x) {kruskal.test(x ~ Bcells$BT)})
pvalues <- apply(y1, 1, function(x) kruskal.test(x ~ Bcells$BT)$p.value)
p.fdr <- p.adjsut(p=pvalues, method = 'fdr')
p.fdr <- p.adjust(p=pvalues, method = 'fdr')
sum(p.fdr<0.05)
names(sort(p.fdr)[1:5])
ALL_BS <- ALL[,ALL$BT%in%c("B1","B2","B3","B4")&ALL$sex]
ALL_BS
ALL_BS <- ALL[,which(ALL$BT%in%c("B1","B2","B3","B4")& ALL$sex)]
ALL_BS
y2 <- exprs(ALL_BS)['38555_at',]
y2
ALL$sex
ALL_BS <- ALL[,which(ALL$BT%in%c("B1","B2","B3","B4")& ALL$sex%in%c("M","F"))]
y2 <- exprs(ALL_BS)['38555_at',]
y2
Bcells2 <- ALL_BS$BT
sex <- ALL_BS$sex
anova(lm(y2 ~ Bcells2*sex))
shapiro.test(residuals(lm(y2 ~ Bcells2*sex)))
bptest(residuals(lm(y2 ~ Bcells2*sex)))
anova(lm(y2 ~ Bcells2+sex))
anova(lm(y2 ~ Bcells2*sex))
names(sort(pvalues))
?names
sort(pvalues)
?exprs
cars <- c("Truck", "Car", "SUV")
mpg <- c(11,30,24)
cost <- c(45000,25000,35000)
df <- data.frame(cars,mpg,cost)
df
df[1,]
df[1,3]
df[1:3]
df[-1]
df[-1,]
df
df[3]
df[1,3]
df[1:3]
mtcars
head(mtcars)
head(mtcars,3)
tail(mtcars,5)
mtcars$mpg
colnames(df)[mpg]
colnames(df)
colnames(df)[1]
colnames(mtcars)[2]
colnames(mtcars)[10]
colnames(mtcars)[1]
colnames(mtcars)[3]
ggplot(mtcars, aes(x=disp, y=mpg))
import ggplot
library("ggplot2")
install.pakages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggplot(mtcars, aes(x=disp, y=mpg))
ggplot(mtcars, aes(x=disp, y=mpg))
geom_point()
ggplot(mtcars, aes(x=disp, y=mpg)) + geom_point()
mtcars[1,]
ggplot(mtcars, aes(x=displ, y=hwy))
ggplot(mtcars, aes(x=disp, y=hwy))
mtcars[cyl]
mtcars$cyl
mtcars
head(mtcars)
ggplot(mpg, aes(x=cyl,y=hwy))
mpg
str(mpg)
mpg
ggplot(mpg,aes(x=cyl,y=hwy))
ggplot(mpg,aes(x=cyl,y=hwy)) + geom_point()
ggplot(mpg,aes(x=cyl,y=hwy)) + geom_point(color=cyl)
ggplot(mpg,aes(x=cyl,y=hwy)) + geom_point(aes(color=factor(cyl)))
facet_wrap(ggplot(mpg,aes(x=cyl,y=hwy)) + geom_point(aes(color=factor(cyl))))
ggplot(mpg,aes(x=cyl,y=hwy)) + geom_point(aes(color=factor(cyl))) + facet_wrap(~ drv)
mpg
install_tinytex()
head(mpg)
ggplot(mpg,aes(x=cyl,y=hwy)) + geom_point(aes(color=factor(cyl)))
ggplot(mpg,aes(x=displ,y=hwy)) + geom_point(aes(color=factor(cyl)))
ggplot(mpg,aes(x=displ,y=hwy)) + geom_point(aes(color=factor(cyl))) + facet_wrap(~ drv)
msleep
